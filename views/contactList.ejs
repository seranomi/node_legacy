<%-include('layouts/header.ejs')%>

<h2>문의 목록입니다.</h2>

<table border="1">
  <tr>
    <th>id</th>
    <th>name</th>
    <th>phone</th>
    <th>email</th>
    <th>content</th>
    <th>create_at</th>
    <th>modify_at</th>
    <th>status</th>
    <th>DONE</th>
    <th>DELETE</th>
  </tr>
  <% lists.forEach(function(item) { %>
  <tr>
    <td><%=item.id%></td>
    <td><%=item.name%></td>
    <td><%=item.phone%></td>
    <td><%=item.email%></td>
    <td><%=item.memo%></td>
    <td><%=item.create_at%></td>
    <td><%=item.modify_at%></td>
    <td><%=item.status%></td>
    <td>
      <button type="button" onclick="updateContact(<%=item.id%>)">
        UPDATE
      </button>
    </td>
    <td>
      <button type="button" onclick="deleteContact(<%=item.id%>)">
        DELETE
      </button>
    </td>
  </tr>
  <% }) %>
</table>

<script>
  async function updateContact(contactId) {
    try {
      const response = await fetch(`/api/contactUpdate/${contactId}`, {
        method: "PUT", // HTTP 메서드
        headers: {
          "Content-Type": "application/json", // 데이터 형식 지정 (필요한 경우)
        },
        // PUT 요청의 경우 body가 필요할 수 있음
      });

      if (!response.ok) {
        throw new Error("업데이트 오류"); // throw를 통해 catch절로 오류 객체 전달
      }
      alert("문의사항이 업데이트되었습니다.");
      location.reload(); // 페이지 새로고침 또는 다른 업데이트 방식 선택
    } catch (error) {
      console.error("업데이트 오류:", error); // 오류 처리
    }
  }

  function deleteContact(contactId) {
    // AJAX를 사용하여 DELETE 요청 보내기
    $.ajax({
      url: `/api/contactDelete/${contactId}`,
      type: "DELETE",
      success: function (response) {
        // 삭제 성공 시의 처리
        alert("문의사항이 삭제되었습니다.");
        location.reload(); // 페이지 새로고침 또는 다른 삭제 방식 선택
      },
      error: function (error) {
        // 오류 처리
        console.error("삭제 오류:", error);
      },
    });
  }

  async function fetchData() {
    try {
      const response = await fetch("/api/some-endpoint", {
        method: "POST", // HTTP 메서드
        headers: {
          "Content-Type": "application/json", // 데이터 형식 지정
        },
        body: JSON.stringify({
          // 전송할 데이터 (예: JSON 문자열)
          key1: "value1",
          key2: "value2",
        }),
      });

      if (!response.ok) {
        throw new Error("업데이트 오류"); // throw를 통해 catch절로 오류 객체 전달
      }

      const data = await response.json(); // 응답을 JSON으로 변환
      console.log("성공:", data); // 성공 시 데이터 처리
    } catch (error) {
      console.error("에러:", error); // 오류 처리
    }
  }
</script>

<%-include('layouts/footer.ejs')%>
